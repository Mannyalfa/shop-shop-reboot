{"ast":null,"code":"import React,{useEffect}from\"react\";import{useSelector,useDispatch}from'react-redux';import{UPDATE_PRODUCTS}from'../../utils/actions';import{useQuery}from'@apollo/react-hooks';import ProductItem from\"../ProductItem\";import{QUERY_PRODUCTS}from\"../../utils/queries\";import{idbPromise}from'../../utils/helpers';import spinner from\"../../assets/spinner.gif\";function ProductList(){var state=useSelector(function(state){return state;});var dispatch=useDispatch();var currentCategory=state.currentCategory;var _useQuery=useQuery(QUERY_PRODUCTS),loading=_useQuery.loading,data=_useQuery.data;useEffect(function(){if(data){dispatch({type:UPDATE_PRODUCTS,products:data.products});data.products.forEach(function(product){idbPromise('products','put',product);});}else if(!loading){idbPromise('products','get').then(function(products){dispatch({type:UPDATE_PRODUCTS,products:products});});}},[data,loading,dispatch]);function filterProducts(){if(!currentCategory)return state.products;return state.products.filter(function(product){return product.category._id===currentCategory;});}return/*#__PURE__*/React.createElement(\"div\",{className:\"my-2\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Our Products:\"),state.products.length?/*#__PURE__*/React.createElement(\"div\",{className:\"flex-row\"},filterProducts().map(function(product){return/*#__PURE__*/React.createElement(ProductItem,{key:product._id,_id:product._id,image:product.image,name:product.name,price:product.price,quantity:product.quantity});})):/*#__PURE__*/React.createElement(\"h3\",null,\"You haven't added any products yet!\"),loading?/*#__PURE__*/React.createElement(\"img\",{src:spinner,alt:\"loading\"}):null);}export default ProductList;","map":{"version":3,"sources":["C:/Users/Owner/Documents/UCF/challenges/shop-shop-reboot/client/src/components/ProductList/index.js"],"names":["React","useEffect","useSelector","useDispatch","UPDATE_PRODUCTS","useQuery","ProductItem","QUERY_PRODUCTS","idbPromise","spinner","ProductList","state","dispatch","currentCategory","loading","data","type","products","forEach","product","then","filterProducts","filter","category","_id","length","map","image","name","price","quantity"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,eAAT,KAAgC,qBAAhC,CACA,OAASC,QAAT,KAAyB,qBAAzB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,OAASC,cAAT,KAA+B,qBAA/B,CACA,OAASC,UAAT,KAA2B,qBAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,CAEA,QAASC,CAAAA,WAAT,EAAuB,CACrB,GAAMC,CAAAA,KAAK,CAAGT,WAAW,CAAC,SAAAS,KAAK,QAAIA,CAAAA,KAAJ,EAAN,CAAzB,CACA,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CAEA,GAAQU,CAAAA,eAAR,CAA4BF,KAA5B,CAAQE,eAAR,CAEA,cAA0BR,QAAQ,CAACE,cAAD,CAAlC,CAAQO,OAAR,WAAQA,OAAR,CAAiBC,IAAjB,WAAiBA,IAAjB,CAEAd,SAAS,CAAC,UAAM,CACd,GAAIc,IAAJ,CAAU,CACRH,QAAQ,CAAC,CACPI,IAAI,CAAEZ,eADC,CAEPa,QAAQ,CAAEF,IAAI,CAACE,QAFR,CAAD,CAAR,CAKAF,IAAI,CAACE,QAAL,CAAcC,OAAd,CAAsB,SAACC,OAAD,CAAa,CACjCX,UAAU,CAAC,UAAD,CAAa,KAAb,CAAoBW,OAApB,CAAV,CACD,CAFD,EAGD,CATD,IASO,IAAI,CAACL,OAAL,CAAc,CACnBN,UAAU,CAAC,UAAD,CAAa,KAAb,CAAV,CAA8BY,IAA9B,CAAmC,SAACH,QAAD,CAAc,CAC/CL,QAAQ,CAAC,CACPI,IAAI,CAAEZ,eADC,CAEPa,QAAQ,CAAEA,QAFH,CAAD,CAAR,CAID,CALD,EAMD,CACF,CAlBQ,CAkBN,CAACF,IAAD,CAAOD,OAAP,CAAgBF,QAAhB,CAlBM,CAAT,CAoBA,QAASS,CAAAA,cAAT,EAA0B,CACxB,GAAI,CAACR,eAAL,CAAsB,MAAOF,CAAAA,KAAK,CAACM,QAAb,CAEtB,MAAON,CAAAA,KAAK,CAACM,QAAN,CAAeK,MAAf,CAAsB,SAAAH,OAAO,QAAIA,CAAAA,OAAO,CAACI,QAAR,CAAiBC,GAAjB,GAAyBX,eAA7B,EAA7B,CAAP,CACD,CAED,mBACE,2BAAK,SAAS,CAAC,MAAf,eACE,8CADF,CAEGF,KAAK,CAACM,QAAN,CAAeQ,MAAf,cACC,2BAAK,SAAS,CAAC,UAAf,EACKJ,cAAc,GAAGK,GAAjB,CAAqB,SAAAP,OAAO,qBACzB,oBAAC,WAAD,EACE,GAAG,CAAGA,OAAO,CAACK,GADhB,CAEE,GAAG,CAAEL,OAAO,CAACK,GAFf,CAGE,KAAK,CAAEL,OAAO,CAACQ,KAHjB,CAIE,IAAI,CAAER,OAAO,CAACS,IAJhB,CAKE,KAAK,CAAET,OAAO,CAACU,KALjB,CAME,QAAQ,CAAEV,OAAO,CAACW,QANpB,EADyB,EAA5B,CADL,CADD,cAcC,oEAhBJ,CAkBIhB,OAAO,cACT,2BAAK,GAAG,CAAEL,OAAV,CAAmB,GAAG,CAAC,SAAvB,EADS,CAC4B,IAnBvC,CADF,CAuBD,CAED,cAAeC,CAAAA,WAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/react-hooks';\nimport ProductItem from \"../ProductItem\";\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from \"../../assets/spinner.gif\"\n\nfunction ProductList() {\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) return state.products;\n\n    return state.products.filter(product => product.category._id === currentCategory);\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n            {filterProducts().map(product => (\n                <ProductItem\n                  key= {product._id}\n                  _id={product._id}\n                  image={product.image}\n                  name={product.name}\n                  price={product.price}\n                  quantity={product.quantity}\n                />\n            ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      { loading ? \n      <img src={spinner} alt=\"loading\" />: null}\n    </div>\n  );\n}\n\nexport default ProductList;\n"]},"metadata":{},"sourceType":"module"}